<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - WebApplication5</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/WebApplication5.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">WebApplication5</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - WebApplication5 - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>

@* <script>
    const booksData = [
        { image: 'book1.jpg', title: '書名1', isbn: 'ISBN1234567', source: '來源1' },
        { image: 'book2.jpg', title: '書名2', isbn: 'ISBN2345678', source: '來源2' },

    ];

    let currentPage = 1;
    let itemsPerPage = 24;

    function generateGridItems(books) {
        const grid = document.getElementById('book-grid');
        grid.innerHTML = '';

        books.forEach(book => {
            const gridItem = document.createElement('div');
            gridItem.className = 'grid-item';
            gridItem.innerHTML = `
                    <p><a href="@Url.Action("Privacy", "Home")"> <img src="${book.image}" alt="${book.title}"></a></p>
            <p>${book.title}</p>
            <p>${book.isbn}</p>
            <p>${book.source}</p>
          `;
            grid.appendChild(gridItem);
        });
    }

    function generatePagination(totalItems) {
        const totalPages = Math.ceil(totalItems / itemsPerPage);
        const pagination = document.getElementById('pagination');
        pagination.innerHTML = '';


        const prevLi = document.createElement('li');
        prevLi.innerHTML = `<a href="#" data-page="prev">&laquo;</a>`;
        pagination.appendChild(prevLi);


        for (let i = 1; i <= totalPages; i++) {
            const li = document.createElement('li');
            li.innerHTML = `<a href="#" data-page="${i}">${i}</a>`;
            if (i === currentPage) {
                li.classList.add('active');
            }
            pagination.appendChild(li);
        }


        const nextLi = document.createElement('li');
        nextLi.innerHTML = `<a href="#" data-page="next">&raquo;</a>`;
        pagination.appendChild(nextLi);


        pagination.querySelectorAll('a').forEach(link => {
            link.addEventListener('click', (event) => {
                event.preventDefault();
                const page = link.dataset.page;

                if (page === 'prev') {
                    currentPage = Math.max(1, currentPage - 1);
                } else if (page === 'next') {
                    currentPage = Math.min(totalPages, currentPage + 1);
                } else {
                    currentPage = parseInt(page);
                }

                updateDisplay();
            });
        });
    }

    function updateDisplay() {
        const startIndex = (currentPage - 1) * itemsPerPage;
        const endIndex = startIndex + itemsPerPage;
        const booksToShow = booksData.slice(startIndex, endIndex);

        generateGridItems(booksToShow);
        generatePagination(booksData.length);
    }

    function changeItemsPerPage() {
        itemsPerPage = parseInt(document.getElementById('itemsPerPage').value);
        currentPage = 1;
        updateDisplay();
    }

    function changeView(element, viewType) {
        const viewToggle = document.querySelector('.view-toggle');
        const grid = document.querySelector('.grid');

        viewToggle.querySelectorAll('li').forEach(li => li.classList.remove('active'));
        element.classList.add('active');

        if (viewType === 'list') {
            grid.classList.add('list-view');
        } else {
            grid.classList.remove('list-view');
        }
    }


    document.addEventListener('DOMContentLoaded', () => {
        updateDisplay();
    }); *@







</script>
</html>
